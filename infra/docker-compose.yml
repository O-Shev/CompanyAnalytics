version: '3.9'
name: 'CompanyAnalytics'

services:
  company-postgres:
    image: postgres:16.3-alpine3.19
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: company_service
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
      - "-c"
      - "max_replication_slots=10"
      - "-c"
      - "max_wal_senders=10"
    ports:
      - '5432:5432'

  analytics-postgres:
    image: postgres:16.3-alpine3.19
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: analytics_service
    ports:
      - '5433:5432'


  master-kafka:
    image: 'bitnami/kafka:3.2.3'
    restart: "no"
    privileged: true
    ports:
      - '2181:2181'
      - '19092:19092' # Internal Docker network port
      - '29092:29092' # External localhost port
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT_INTERNAL://:19092,PLAINTEXT_EXTERNAL://:29092,CONTROLLER://:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT,PLAINTEXT_EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT_INTERNAL://master-kafka:19092,PLAINTEXT_EXTERNAL://localhost:29092
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:2181
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT_INTERNAL
      - ALLOW_PLAINTEXT_LISTENER=yes



  debezium:
    image: debezium/connect:1.9
    depends_on:
      - company-postgres
      - master-kafka
    environment:
      - BOOTSTRAP_SERVERS=master-kafka:19092
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
    ports:
      - "8083:8083"