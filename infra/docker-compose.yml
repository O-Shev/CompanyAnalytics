version: '3.9'
name: 'CompanyAnalytics'

services:
  master-postgres:
    image: postgres:16.3-alpine3.19
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: company_analytics
    command:
      - "postgres -c wal_level=logical -c max_replication_slots=10 -c max_wal_senders=10"
    volumes:
      - master_postgres-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d company_analytics" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  master-kafka:
    image: 'bitnami/kafka:3.2.3'
    restart: "no"
    privileged: true
    ports:
      - '2181:2181'
      - '19092:19092'
    volumes:
      - kafka-data:/bitnami/kafka
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:19092,CONTROLLER://:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://master-kafka:19092
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:2181
      - ALLOW_PLAINTEXT_LISTENER=yes

  debezium:
    image: debezium/connect:1.9
    depends_on:
      - master-postgres
      - master-kafka
    environment:
      - BOOTSTRAP_SERVERS=master-kafka:19092
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
      - CONNECTOR_CONFIG_DIR=/kafka-connect/config
      - CONNECT_CONNECTOR_CONFIG_FILE=/kafka-connect/config/postgres-debezium-connector.json
    ports:
      - "8083:8083"
    volumes:
      - debezium-data:/kafka-connect
      - ./dbz-config:/kafka-connect/config

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    environment:
      KAFKA_BROKERCONNECT: "master-kafka:19092"
    ports:
      - 9000:9000
    depends_on:
      - master-kafka

volumes:
  master_postgres-data:
  kafka-data:
  debezium-data:
